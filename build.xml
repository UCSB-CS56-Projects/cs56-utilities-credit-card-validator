<project default="compile">
<!--
 build.xml for Mantis Ticket, S11, CS56
 name: jicheng huang & Christopher Langford
-->
<property environment="env"/>
<!-- load the environment variables -->

<property name="package" value="edu.ucsb.cs56.projects.utilities.credit_card_validator" />
<property name="webRoot" value="${env.HOME}/public_html/cs56/S11/issues/"/>
<property name="webBaseUrl" value="http://www.cs.ucsb.edu/~${env.USER}/cs56/"/>
<property name="projectName" value="0000258"/>
<property name="mainClass" value="Menu"/>
<property name="javadocDest" value="${webRoot}/${projectName}/javadoc"/>
<property name="javadocURL" value="${webBaseUrl}/${projectName}/javadoc"/>
<property name="jwsDest" value="${webRoot}/${projectName}/jws"/>
<property name="jwsURL" value="${webBaseUrl}/${projectName}/jws"/>

<target name="compile" description="compile the code">
  <mkdir dir="build"/>

  <javac srcdir="src" destdir="build" debug="true" debuglevel="lines,source"
   includeantruntime="false" >

    <classpath>
      <pathelement location="build"/>
      <pathelement location="lib/junit-4.8.2.jar"/>
    </classpath>
  </javac>
</target>

<target name="run" depends="compile" description="run the Main Menu program.">
  <java classname="${package}.${mainClass}" classpath="build" fork="true"/>
</target>

<target name="clean" description="gets rid of any unnecessary files and directories">

  <delete failonerror="false" verbose="true">
    <fileset dir="build" includes="*.class"/>
  </delete>
  <delete dir="javadoc" quiet="true"/>
  <delete dir="dist" quiet="true"/>
  <delete dir="download" quiet="true"/>
  <delete dir="temp" quiet="true"/>
</target>

<target name="test" depends="compile" description="test the code">

  <junit haltonerror="no" haltonfailure="no">

    <classpath>
      <pathelement location="lib/junit-4.8.2.jar"/>
      <pathelement location="build"/>
    </classpath>

    <batchtest fork="yes">

      <fileset dir="src">

	<!--
	    this will pick up every class with a name ending in Test
	-->
	<include name="**/*Test.java"/>
      </fileset>
    </batchtest>
    <formatter type="plain" usefile="false"/>
  </junit>
</target>

<target name="javadoc" depends="compile" description="create javadocs for the code">
  <delete dir="javadoc" quiet="true"/>

  <javadoc destdir="javadoc" author="true" version="true" use="true">
    <fileset dir="src" includes="**/*.java"/>

    <classpath>
      <pathelement location="lib/junit-4.8.2.jar"/>
    </classpath>
  </javadoc>
  <!-- delete the old javadoc -->
  <delete quiet="true" dir="${javadocDest}"/>

  <!--
      copy everything you just made to the javadoc destination, and then make it readable
-->

  <copy todir="${javadocDest}">
    <fileset dir="javadoc"/>
  </copy>

  <!--
      Note: this only does the chmod command on the
      javadoc subdirectory and its contents.  You MIGHT have to
      MANUALLY do the chmod on the parent directories.  However,
      you should only need to do that once.
  -->
  <chmod dir="${javadocDest}" perm="755" type="dir" includes="**"/>
  <chmod dir="${javadocDest}" perm="755" type="file" includes="**/*"/>
  <echo>Javadoc deployed to ${javadocURL}</echo>
</target>

<target name="jar" depends="compile" description="put the files in a jar">
  <mkdir dir="dist"/>

  <jar destfile="dist/${projectName}.jar" basedir="build">

    <manifest>
      <attribute name="Main-Class" value="${mainClass}"/>
    </manifest>
  </jar>
</target>

<target name="download" depends="" description="sets up a download directory">

  <delete quiet="true">
    <fileset dir="temp" includes="**/*"/>
    <fileset dir="download" includes="**/*"/>
  </delete>
  <mkdir dir="download"/>
  <mkdir dir="temp"/>
  <mkdir dir="temp/${projectName}"/>

  <copy todir="temp/${projectName}">
    <fileset dir="." excludes="build/**, javadoc/**, **/*~, temp/**, dist/**, download/**"/>
  </copy>
  <tar destfile="temp/${projectName}.tar" basedir="temp" includes="${projectName}/**"/>
  <gzip zipfile="download/${projectName}.tgz" src="temp/${projectName}.tar"/>
  <zip destfile="download/${projectName}.zip" basedir="temp" includes="${projectName}/**"/>

  <delete quiet="true">
    <fileset dir="temp" includes="**/*"/>
  </delete>
</target>

<target name="publish" depends="jws,jar,javadoc,download" description="publish everything onto the page">
  <mkdir dir="${webRoot}/${projectName}"/>
  <delete dir="${webRoot}/${projectName}/browse"/>
  <mkdir dir="${webRoot}/${projectName}/browse"/>
  <delete dir="${webRoot}/${projectName}/download"/>
  <mkdir dir="${webRoot}/${projectName}/download"/>
  <copy file="html/index.html" todir="${webRoot}/${projectName}"/>

  <copy todir="${webRoot}/${projectName}/download">
    <fileset dir="download"/>
    <fileset dir="dist"/>
  </copy>
  <copy file="build.xml" todir="${webRoot}/${projectName}/browse"/>

  <copy todir="${webRoot}/${projectName}/browse/src">
    <fileset dir="src"/>
  </copy>
  <chmod dir="${webRoot}/${projectName}" perm="755" type="both" includes="**/*"/>
  <echo>Project published to ${webBaseUrl}/${projectName}</echo>
</target>

<target name="jws" depends="compile,jar" description="creates the Java Web Start">
  <delete dir="${webRoot}/${projectName}/jws"/>
  <mkdir dir="${webRoot}/${projectName}/jws"/>
  <copy todir="${jwsDest}" file="dist/${projectName}.jar"/>

  <copy todir="${jwsDest}">
    <fileset dir="jws" includes="*.html"/>
    <fileset dir="jws" includes="*.jnlp"/>
    <fileset dir="jws" includes="*.png"/>
    <fileset dir="jws" includes=".htaccess"/>
  </copy>
  <echo>Java web start at ${jwsURL}</echo>
</target>
</project>
